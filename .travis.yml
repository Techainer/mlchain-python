language: python
arch:
  - amd64

stages:
  - sanity_check
  - build
  - test
  - name: deploy
    if: branch = master

jobs:
  include:
    - stage: sanity_check
      name: "Sanity check"
      os: linux
      python: 3.7
      install:
        - pip install -U pylint pylint-exit 
      script:
        - pylint --output-format=text *.py || pylint-exit $? 

    - stage: build
      name: "Build on Python 3.7 Linux"
      os: linux
      python: 3.7
      install:
        - pip install -U scikit-build awscli pip
        - pip install -U -r requirements.txt
      script:
        - python setup.py bdist_wheel
        - python setup.py install

    - stage: build
      name: "Build on Python 3.6 Linux"
      os: linux
      python: 3.6
      install:
        - pip install -U scikit-build awscli pip
        - pip install -U -r requirements.txt
      script:
        - python setup.py bdist_wheel
        - python setup.py install

    - stage: build
      name: "Build on Python 3.7 MacOS"
      os: osx
      language: minimal
      install:
        - pip3 install -U scikit-build awscli pip
        - pip3 install -U -r requirements.txt
      script:
        - python3 setup.py bdist_wheel
        - python3 setup.py install

    - stage: build
      name: "Build on Python 3.7 Windows"
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.7.4
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
      install:
        - python -m pip install -U scikit-build awscli pip --user
        - python -m pip install -U -r requirements.txt --user

      script:
        - python setup.py bdist_wheel
        - python setup.py install


    - stage: test
      name: "Test on Python 3.7 Linux"
      os: linux
      python: 3.7
      install:
        - pip install -U scikit-build pytest coverage codecov pip
        - pip install -U attrs
      script:
        - pip install .
        - python -m coverage run --source=. -m unittest discover
        - python -m coverage report
      after_success:
        - codecov


    - stage: test
      name: "Test on Python 3.6 Linux"
      os: linux
      python: 3.6
      install:
        - pip install -U scikit-build pytest coverage codecov pip
        - pip install -U attrs
      script:
        - pip install .
        - python -m coverage run --source=. -m unittest discover
        - python -m coverage report
      after_success:
        - codecov


    - stage: test
      name: "Test on Python 3.7 MacOS"
      os: osx
      language: minimal
      install:
        - pip3 install -U scikit-build pytest coverage codecov pip
        - pip3 install -U attrs
      script:
        - pip3 install .
        - python3 -m coverage run --source=. -m unittest discover
        - python3 -m coverage report
      after_success:
        - codecov

    - stage: test
      name: "Test on Python 3.7 Windows"
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.7.4
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
      install:
        - python -m pip install -U scikit-build pytest coverage codecov pip
        - python -m pip install -U attrs
      script:
        - python -m pip install .
        - python -m coverage run --source=. -m unittest discover
        - python -m coverage report
      after_success:
        - codecov